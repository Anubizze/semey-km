#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–æ–¥–æ–º
"""

from werkzeug.security import generate_password_hash
from models import db, User, Batch, Equipment, Material
from app import app

def test_system():
    with app.app_context():
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–æ–¥–æ–º...")
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω
        admin = User.query.filter_by(username="admin").first()
        if admin:
            print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–æ–ª–∏
        test_users = [
            ("–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", "123456789012", "casting_operator", "–ó–∞–ª–∏–≤—â–∏–∫"),
            ("–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", "123456789013", "cutting_operator", "–†–µ–∑—á–∏–∫"),
            ("–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤", "123456789014", "autoclave_operator", "–ê–≤—Ç–æ–∫–ª–∞–≤—â–∏–∫"),
            ("–ï–ª–µ–Ω–∞ –î–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤–∞", "123456789015", "chief_technologist", "–ì–ª–∞–≤–Ω—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥")
        ]
        
        for fio, iin, role, position in test_users:
            existing = User.query.filter_by(iin=iin).first()
            if not existing:
                user = User(
                    fio=fio,
                    iin=iin,
                    username=iin,
                    password=generate_password_hash(iin[-6:]),
                    role=role,
                    position=position
                )
                db.session.add(user)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {fio} ({role})")
            else:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {fio}")
        
        db.session.commit()
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
        materials_count = Material.query.count()
        if materials_count > 0:
            print(f"‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ: {materials_count}")
        else:
            print("‚ö†Ô∏è –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø—É—Å—Ç - –∑–∞–ø—É—Å—Ç–∏—Ç–µ /init_references")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
        equipment_count = Equipment.query.count()
        if equipment_count > 0:
            print(f"‚úÖ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ: {equipment_count}")
        else:
            print("‚ö†Ô∏è –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç - –∑–∞–ø—É—Å—Ç–∏—Ç–µ /init_references")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—Ç–∏–∏
        batches_count = Batch.query.count()
        print(f"üì¶ –ü–∞—Ä—Ç–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: {batches_count}")
        
        print("\nüéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:")
        print("   –ê–¥–º–∏–Ω: admin / admin123")
        for fio, iin, role, position in test_users:
            print(f"   {position}: {iin} / {iin[-6:]}")
        
        print("\nüîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
        print("   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Ç–∏–π: /create_batch")
        print("   ‚Ä¢ –°–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–∏–π: /batch_list")
        print("   ‚Ä¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: /init_references")
        print("   ‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: /director_dashboard")

if __name__ == "__main__":
    test_system()
