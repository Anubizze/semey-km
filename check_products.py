#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from app import app, db, Product, Equipment, Material

def check_data():
    with app.app_context():
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
        products = Product.query.all()
        print(f"üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã: {len(products)}")
        for product in products:
            print(f"  - {product.product_code}: {product.name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
        equipment = Equipment.query.all()
        print(f"\nüîß –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: {len(equipment)}")
        for eq in equipment:
            print(f"  - {eq.name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
        materials = Material.query.all()
        print(f"\nüß± –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: {len(materials)}")
        for material in materials:
            print(f"  - {material.name} ({material.unit})")
        
        if len(products) == 0:
            print("\n‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç! –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å.")
            return False
        else:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(products)} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
            return True

if __name__ == "__main__":
    check_data()


